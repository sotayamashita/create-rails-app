version: 2.1

references:
  ruby: &ruby
    image: circleci/ruby:2.6.5
    environment:
      PGHOST: 127.0.0.1
      PGUSER: your-app-name
      RAILS_ENV: test
  postgres: &postgres
    image: postgres:alpine
    environment:
      POSTGRES_USER: your-app-name
      POSTGRES_DB: your-app-name_test
      POSTGRES_PASSWORD: ""

jobs:
  build:
    docker:
      - *ruby
    steps:
        - checkout

        - restore_cache:
            keys:
              - gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
              - gem-cache-v1-{{ arch }}-{{ .Branch }}
              - gem-cache-v1

        - run:
            name: Bundle install dependencies
            command: bundle check || bundle install --path vendor/bundle -j "$(getconf _NPROCESSORS_ONLN)"

        - save_cache:
            key: gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            paths:
              - vendor/bundle


  test:
    docker:
      - *ruby
      - *postgres
    steps:
        - checkout

        - run:
            name: Analysis for code format
            command: bundle exec rufo --check app spec

        - run:
            name: Wait for DB
            command: dockerize -wait tcp://localhost:5432 -timeout 1m

        - run:
            name: Setup the database
            command: bundle exec rails db:schema:load --trace

        - run:
            name: Run the tests in parallel
            command: |
              bundle exec rspec --profile 10 \
                                --format RspecJunitFormatter \
                                --out test_results/rspec.xml \
                                --format progress \
                                $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

        - store_artifacts:
            path: coverage

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
